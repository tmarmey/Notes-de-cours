\documentclass[12pt,a4paper]{article}
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\graphicspath{{../Images/}}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{hyperref}
\usepackage[margin=1in]{geometry}
\usepackage{subfig}
\usepackage{float}
\usepackage{xcolor}

\author{Thibaut Marmey}

\title{Notes de cours Deep-Learning}
\begin{document}
	\maketitle

\begin{normalsize}
\tableofcontents
\end{normalsize}

\section{Initiation à Jupyter Notebook}

\subsection{Importer des bibliothèques au kernel}
\begin{itemize}
\item \textit{import libraryName}
\item S'il y a un problème de librairie : \textit{pip install libraryName}
\begin{itemize}
\item \textit{matplotlib}
\item \textit{image}
\end{itemize}
\item \textit{os} : lire, écrire, ouvrir, manipuler des fichiers
\begin{itemize}
\item \textit{os.mkdir()}
\item \textit{os.listdir()}
\item \textit{[a for a in os.listdir('nameFolder') if '.jpg' in a or '.jpeg' in a]} (spécifier des fichiers)
\item var.endswith('.extension/smth') (renvoie True/False)
\item \textit{os.path.join(path,*paths)} : Join one or more path components intelligently. The return value is the concatenation of \textit{path} and any members of \textit{*paths}.
\end{itemize}
\item \textit{urlib.request} : intéragir avec les URLs
\item \textit{ssl} (Secure Sockets Layer) : créer une connection sécurisé (crypté) entre un client et un serveur.
\item \textit{matplotlib.pyplot as plt} : visualisation and chargement d'images
\newline On peut ainsi faire référence à \textit{matplotlib.pyplot} seulement avec \textit{plt}. C'est une pratique courante.
\begin{itemize}
\item \textit{\%matplotlib inline} : la visualisation se fera dans notebook et non pas avec une fenêtre pop-up (méthode par défaut)
\item \textit{plt.figure(); plt.imshow(img)} : permet d'afficher plusieurs images
\end{itemize}
\item \textit{numpy as np} : permet de travailler sur des variables numériques plus facilement (images par exemple)
\begin{itemize}
\item \textit{np.random.randint(0, len(listOfFiles))} : retourne aléatoirement des entiers entre 0 et la longueur de la listeOfFiles.\\
\item \textit{np.mean(img, axis=n)} : renvoie une image dont la valeur des pixels est la moyenne De \textit{R+G+B} des pixels
\item \textit{data = np.array(imgs)} : pour avoir la dimension batch ou nombre d'images. La \textit{shape} de \textit{data} est alors : \textit{N * H * W * C}
\begin{itemize}
\item \textit{N} : nombre d'images dans \textit{data}
\item \textit{H} : hauteur ou nombre de lignes
\item \textit{W} : largeur ou nombre de colonnes
\item \textit{C} : nombre de couleurs dans les images (RGB=3, gray=1)
\end{itemize}
\item \textit{data = np.concatenate([img[np.newaxis] for img in imgs], axis=0)}
\end{itemize}
\item \textit{scipy} : library used for scientific computing and technical computing. contains modules for optimization, linear algebra, integration, interpolation, special functions, FFT, signal and image processing, ODE solvers and other tasks common in science and engineering. 
\begin{itemize}
\item \textit{from scipy.misc import imresize}
\end{itemize}
\end{itemize}

\subsection{Généralité}
\subsubsection{RGB Image Representation}
\begin{itemize}
\item \textit{plt.imshow(img)}
\item \textit{img.shape} (lignes, colonnes, couleurs): dimension de la donnée (image)
\item \textit{img.dtype} : donne le nombre de bits utilisé pour coder l'image
\begin{itemize}
\item \textit{uint8 : unsigned, int, 8} : pas de signe (toutes les valeurs seront positives), seulement des entiers, codés sur 8 bits (de 0 à 255)
\end{itemize}
\end{itemize}

\section{Initiation au Deep-learning}
\subsection{Général}
\begin{itemize}
\item \href{https://github.com/pkmital/CADL}{Cours GitHub Kadenze}
\item \href{http://docs.continuum.io/anaconda/install/linux/}{Installation Anaconda}
\item Lancer anaconda : \textit{anaconda-navigator}
\item Créer un environnement virtuel via anaconda : \textit{conda create -n nomFile anaconda}
\item Installer TF dans cet env. : \textit{conda install -c conda-forge tensorflow}
\item \textit{conda install jupyter notebook}
\item Lancer env. virtuel : \textit{source activate tensorflow} (\textit{tensorflow} est le nom donné à l'env. virtuel)
\item Lancer Jupyter : \textit{jupyter notebook}
\item Tester Tensorflow : \textit{python -c "import tensorflow as tf; print(tf.\textunderscore \textunderscore version\textunderscore \textunderscore)"}
\item Quitter l'env. virtuel : \textit{source deactivate}
\end{itemize}

\subsection{CADL session}
\subsubsection{Session-0}
\begin{itemize}
\item Dataset \href{http://mmlab.ie.cuhk.edu.hk/projects/CelebA.html}{\textit{Celeb Net}}, à peu près 200 000 images de célébrités.
\item Généralement on travaille avec des images de 32 bits dans les réseaux de neurones.\\
Changer l'image au format voulu : \textit{img.astype(np.float32)}
\item Définir une fonction : \textit{def functionName(args):}
\item En DL, les images du dataset doivent avoir la même taille. Il faut donc rogner ces images au même format sans altérer les éléments importants dans celles-ci. Une méthode courante est de rogner l'image en carré en prenant le côté le plus long et le mettre à la même taille que le côté le plus court. Par cette méthode il est possible de redimensionner l'image sans la déformer.
\item La convention pour stocker plusieurs images est d'utiliser le batch dimension (de la forme N*H*W*C via \textit{data.shape}) avec \textit{np.array(imgs)} ou \textit{np.concatenate()}. 
\end{itemize}


\end{document}